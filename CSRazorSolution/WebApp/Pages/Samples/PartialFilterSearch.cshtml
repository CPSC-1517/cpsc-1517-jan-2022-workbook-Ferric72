@page "{searcharg?}"
@model WebApp.Pages.Samples.PartialFilterSearchModel
@{
	ViewData["Title"] = "Partial String Table Query";
}
<h1>Partial String query resulting in a Table display</h1>

<p>@Model.Feedback</p>

<form method="post">
	<label>		
		Enter a partial Territory description:
		<input type="text" asp-for="searcharg"
			placeholder="enter your description" required/>			
	</label>
	<br/>
	@*restrict the display of the table to when there is data to view*@
	@if (Model.TerritoryInfo != null)
	{
		if (Model.TerritoryInfo.Count == 0)
		{
			<p style="color:blueviolet; font-weight:bold; font-size:large;">
				There are no territories matching your search request.
			</p>
		}
		else
		{
			<table>
				<thead>
					@*used for column titles*@
					<tr>
						<th>Territory</th>
						<th>Name</th>
						<th>Region ID</th>
					</tr>
				</thead>
				<tbody>
					@*used for the table details
						the number of rows are usually unknown for a db query
					*@
					@foreach (var item in Model.TerritoryInfo)
					{
						<tr>
							<td>
							@*
								this example will send the TerritoryID to another page
								use the anchor tage to accomplish this task
								the href page value MUST be referenced from the Pages folder
								the value to be passed is attached to the end of the 
									page reference
								In this example, the value will be passed to the receiving
									page as a routing parameter
								You CAN send multiple values to the new page
								The receiving page MUST have the same number of routing parameters
									as those passed AND the order of the routing parameters
									is important
								Page reference syntax: /pathname/value[/value/...] --remember that in syntax notation [] square brakets indicate optional syntax. Do NOT include square brackets when coding
								The text of your anchor tag does NOT need to be the value
									that is being passed
							*@
							<a href="/Samples/ReceivingPage/@item.TerritoryID">
								Passing this value: @item.TerritoryID
							</a>
							@item.TerritoryID
							</td>
							<td>@item.TerritoryDescription</td>
							<td><select disabled="true">
									@foreach (var region in Model.RegionList)
									{
										if (region.RegionID == item.RegionID)
										{
											<option value="@region.RegionID" selected>@region.RegionDescription</option>
										}
										else
										{
											<option value="@region.RegionID">@region.RegionDescription</option>
										}
									}
								</select>
							</td>
						</tr>
					}

				</tbody>
				<tfoot>
				@*used for summary table information eg. totals
					used for displaying paging information
				*@
					<tr>
						<td colspan="3">
							@{
								//the pageRef is the string representation of the 
								//	the value to be displayed AND its numeric
								//the string maybe a character line : Next
								//the string maybe a numeric : 4
								//	First Previous 1 2 3 4 5 Next Last
								foreach(var pageRef in Model.Pager)
								{
									if (pageRef == Model.Pager.CurrentPage)
									{
										<b>@pageRef.Text</b>
									}
									else
									{
										//create an anchor tag to move to the
										//	desired collection page
										//the target of the anchor destination
										//	is your current web cshtml
										//this will cause an OnGet issue
										// .Page is the numeric representation
										//	of the desired page
										//for the asp-page your page name reference
										//	MUST be based from the folder named Pages
										//	ie. if your page is in a subfolder, you have
										//	 to include the subfolder in the path even if
										//	you're linking to a page in the same folder
										<a title="Page @pageRef.Page"
										   asp-page="/Samples/PartialFilterSearch"
										   asp-route-currentpage="@pageRef.Page">
										   @pageRef.Text
										 </a>
									}
								}
							}
						</td>
					</tr>
				</tfoot>
			</table>
		}
	}
	<button type="submit" asp-page-handler="Fetch">Fetch Territories</button>&nbsp;&nbsp;	
	<button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button>
</form>

